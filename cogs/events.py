"""
cogs/events.py
–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–µ–π—Å—Ç–≤–∏–π –±–æ—Ç–∞:
- –ì—Ä—É–ø–ø—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–∞–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
- –í –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—Å—Ç—å –æ–±—â–∏–π –∫–∞–Ω–∞–ª –∏ –ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
- –ë–æ—Ç –ø–∏—à–µ—Ç –í–°–ï —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ {bot_name}-feedback.
- –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª.
"""

import asyncio
import discord
from discord.ext import commands
from discord import PermissionOverwrite, ui
from database.init_db import init_db
from utils.file_manager import add_or_check_student, ensure_excel_exists

from discord import ui, PermissionOverwrite

# cogs/events.py

class ChannelConflictView(ui.View):
    """
    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä: —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª
    –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π.
    –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ ‚Äî –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª—è–µ—Ç—Å—è.
    """

    def __init__(self, member: discord.Member, category: discord.CategoryChannel,
                 existing_channel: discord.TextChannel, feedback_channel: discord.TextChannel = None):
        super().__init__(timeout=None)
        self.member = member
        self.category = category
        self.existing_channel = existing_channel
        self.feedback_channel = feedback_channel  # ‚úÖ –¥–æ–±–∞–≤–ª–µ–Ω–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å AttributeError

    async def _delete_original_message(self, interaction: discord.Interaction):
        """–£–¥–∞–ª—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)."""
        try:
            await interaction.message.delete()
        except Exception as e:
            try:
                await interaction.followup.send(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}", ephemeral=True)
            except Exception:
                pass  # –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å followup ‚Äî –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ

    @ui.button(label="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π", style=discord.ButtonStyle.primary)
    async def create_new(self, interaction: discord.Interaction, button: ui.Button):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º +1 –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º topic."""
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message(
                "‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.", ephemeral=True
            )
            await self._delete_original_message(interaction)
            return

        # üßπ –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ topic —Å —ç—Ç–∏–º ID
        for ch in self.category.text_channels:
            if ch.topic and ch.topic.strip() == str(self.member.id):
                try:
                    await ch.edit(topic=None)
                    print(f"‚öôÔ∏è –û—á–∏—Å—Ç–∏–ª topic —É —Å—Ç–∞—Ä–æ–≥–æ –∫–∞–Ω–∞–ª–∞ {ch.name} (ID —Å–æ–≤–ø–∞–¥–∞–ª).")
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å topic —É {ch.name}: {e}")

        base_name = self.member.display_name.lower().replace(" ", "-")
        new_name = base_name
        i = 1
        existing_names = [ch.name for ch in self.category.text_channels]
        while new_name in existing_names:
            new_name = f"{base_name}-{i}"
            i += 1

        overwrites = {
            self.member.guild.default_role: PermissionOverwrite(view_channel=False),
            self.member: PermissionOverwrite(view_channel=True, send_messages=True),
        }
        new_channel = await self.category.create_text_channel(
            new_name, overwrites=overwrites, topic=str(self.member.id)
        )

        await interaction.response.send_message(
            f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª {new_channel.mention}.", ephemeral=True
        )
        if self.feedback_channel:
            await self.feedback_channel.send(
                f"üÜï –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª {new_channel.mention} –¥–ª—è {self.member.mention}. "
                f"–°—Ç–∞—Ä—ã–µ topic —Å ID –±—ã–ª–∏ –æ—á–∏—â–µ–Ω—ã."
            )
        await self._delete_original_message(interaction)


    @ui.button(label="–î–æ–±–∞–≤–∏—Ç—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π", style=discord.ButtonStyle.success)
    async def add_to_existing(self, interaction: discord.Interaction, button: ui.Button):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–Ω–∞–ª."""
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message(
                "‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ.", ephemeral=True
            )
            await self._delete_original_message(interaction)
            return

        await self.existing_channel.set_permissions(
            self.member,
            view_channel=True,
            send_messages=True,
            read_message_history=True,
        )
        await interaction.response.send_message(
            f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–Ω–∞–ª {self.existing_channel.mention}.",
            ephemeral=True,
        )
        await self._delete_original_message(interaction)



class DeleteChannelView(ui.View):
    """–í—ã–±–æ—Ä –ø—Ä–∏ —É—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª."""

    def __init__(self, channel: discord.TextChannel, feedback_channel: discord.TextChannel = None):
        super().__init__(timeout=None)
        self.channel = channel
        self.channel_id = channel.id  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–Ω–∞–ª–∞
        self.feedback_channel = feedback_channel
        self.message = None  # —Å—é–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏

    async def _delete_original_message(self, interaction: discord.Interaction):
        try:
            await interaction.message.delete()
        except Exception:
            pass

    @ui.button(label="–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª", style=discord.ButtonStyle.danger)
    async def delete_channel(self, interaction: discord.Interaction, button: ui.Button):
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —ç—Ç–æ –¥–µ–ª–∞—Ç—å.", ephemeral=True)
            await self._delete_original_message(interaction)
            return

        try:
            await self.channel.delete(reason="–£–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
            await interaction.response.send_message(f"‚úÖ –ö–∞–Ω–∞–ª **{self.channel.name}** —É–¥–∞–ª—ë–Ω.", ephemeral=True)
            if self.feedback_channel:
                await self.feedback_channel.send(f"üóëÔ∏è –ö–∞–Ω–∞–ª **{self.channel.name}** —É–¥–∞–ª—ë–Ω –ø–æ —Ä–µ—à–µ–Ω–∏—é {interaction.user.mention}.")
        except Exception as e:
            await interaction.response.send_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}", ephemeral=True)
        finally:
            await self._delete_original_message(interaction)

    @ui.button(label="–ù–µ —É–¥–∞–ª—è—Ç—å", style=discord.ButtonStyle.success)
    async def keep_channel(self, interaction: discord.Interaction, button: ui.Button):
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —ç—Ç–æ –¥–µ–ª–∞—Ç—å.", ephemeral=True)
            await self._delete_original_message(interaction)
            return

        await interaction.response.send_message(f"‚úÖ –ö–∞–Ω–∞–ª **{self.channel.name}** —Å–æ—Ö—Ä–∞–Ω—ë–Ω.", ephemeral=True)
        if self.feedback_channel:
            await self.feedback_channel.send(f"üìÅ –ö–∞–Ω–∞–ª **{self.channel.name}** —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ø–æ —Ä–µ—à–µ–Ω–∏—é {interaction.user.mention}.")
        await self._delete_original_message(interaction)





class EventsCog(commands.Cog):
    """–°–æ–±—ã—Ç–∏—è Discord: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥—Ä—É–ø–ø, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ."""

    def __init__(self, bot):
        self.bot = bot
        self.feedback_channels = {}

    # -------------------------------------------------------------------------
    # –°–æ–±—ã—Ç–∏—è
    # -------------------------------------------------------------------------

    @commands.Cog.listener()
    async def on_ready(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞."""
        print(f'‚úÖ –ë–æ—Ç {self.bot.user} –∑–∞–ø—É—â–µ–Ω!')
        await init_db()
        ensure_excel_exists()

        for guild in self.bot.guilds:
            fb = await self.get_or_create_feedback_channel(guild)
            self.feedback_channels[guild.id] = fb
            await self.setup_unknown_role_and_channel(guild)
            await self.log_action(guild, f"üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{guild.name}**.")

    @commands.Cog.listener()
    async def on_member_join(self, member):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        guild = member.guild
        unknown_role = await self.get_or_create_role(guild, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ")
        await member.add_roles(unknown_role)
        await self.log_action(guild, f"üÜï –£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è. –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ'.")
        await self.start_registration_dialog(member, guild, unknown_role)

    @commands.Cog.listener()
    async def on_member_remove(self, member):
        """–ü—Ä–∏ –≤—ã—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª.
        –ü–µ—Ä–µ–¥ —ç—Ç–∏–º –æ—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ feedback."""
        guild = member.guild
        feedback = await self.get_or_create_feedback_channel(guild)

        # üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            async for msg in feedback.history(limit=100):  # –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –ª–∏–º–∏—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
                if (
                    str(member.id) in msg.content
                    or member.display_name.lower() in msg.content.lower()
                    or (msg.embeds and any(member.display_name.lower() in str(e.description).lower() for e in msg.embeds))
                ):
                    try:
                        await msg.delete()
                        print(f"üßπ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ feedback –æ {member.display_name}")
                    except Exception as e:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ feedback: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—á–∏—Å—Ç–∫–∏ feedback: {e}")

        # üîç –ü–æ–∏—Å–∫ –ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –ø–æ topic (–≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è member.id)
        found_channel = None
        for category in guild.categories:
            for ch in category.text_channels:
                if ch.topic and ch.topic.strip() == str(member.id):
                    found_channel = ch
                    break
            if found_channel:
                break

        # ‚öôÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—ã–±–æ—Ä–∞
        if found_channel:
            feedback = await self.get_or_create_feedback_channel(guild)
            view = ChannelConflictView(member, category, personal_channel, feedback)
            await feedback.send(
                f'‚ö†Ô∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª "{member.display_name}" –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n'
                f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                view=view
            )

            await self.log_action(guild, f"üëã {member.display_name} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä. –ù–∞–π–¥–µ–Ω –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª {found_channel.name} (–ø–æ topic).")
        else:
            await feedback.send(
                f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{member.display_name}** –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä, –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."
            )
            await self.log_action(guild, f"‚ÑπÔ∏è {member.display_name} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä. –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")




    # -------------------------------------------------------------------------
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥—Ä—É–ø–ø
    # -------------------------------------------------------------------------

    async def start_registration_dialog(self, member: discord.Member, guild: discord.Guild, unknown_role: discord.Role):
        """–î–∏–∞–ª–æ–≥ –≤ –ª–∏—á–∫–µ: –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏, —Ñ–∞–º–∏–ª–∏–∏ –∏ –≥—Ä—É–ø–ø—ã."""
        intro = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
            "–í–≤–µ–¥–∏ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `–ò–ú–Ø –§–ê–ú–ò–õ–ò–Ø –ì–†–£–ü–ü–ê`\n"
            "–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤ –ì–†-01\n"
            "–ù–∞–ø–∏—à–∏ `–æ—Ç–º–µ–Ω–∞`, —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å."
        )
        await member.send(intro)

        def check(m: discord.Message):
            return m.author == member and isinstance(m.channel, discord.DMChannel)

        attempts = 3
        while attempts > 0:
            try:
                msg = await self.bot.wait_for("message", check=check, timeout=300.0)
            except asyncio.TimeoutError:
                await member.send("‚è∞ –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ. –ù–∞–ø–∏—à–∏ `!verify`, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.")
                await self.log_action(guild, f"‚è∞ {member.display_name} –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (—Ç–∞–π–º–∞—É—Ç).")
                return

            content = msg.content.strip()
            if content.lower() in ("–æ—Ç–º–µ–Ω–∞", "cancel", "stop"):
                await member.send("üö´ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                await self.log_action(guild, f"üö´ {member.display_name} –æ—Ç–º–µ–Ω–∏–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")
                return

            parts = content.split()
            if len(parts) < 3:
                attempts -= 1
                await member.send(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {attempts}.")
                await self.log_action(guild, f"‚ö†Ô∏è {member.display_name} –≤–≤—ë–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {attempts}.")
                continue

            first_name, last_name, *group_parts = parts
            group = " ".join(group_parts).strip()

            if add_or_check_student(first_name, last_name, group):
                await self.assign_group_role_and_channels(guild, member, first_name, last_name, group, unknown_role)
                await member.send(f"‚úÖ –¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –≥—Ä—É–ø–ø–µ **{group}**.")
                await self.log_action(guild, f"‚úÖ {member.display_name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {group}.")
                return
            else:
                attempts -= 1
                await member.send(f"‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ '{group}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")
                await self.log_action(guild, f"‚ö†Ô∏è {member.display_name} —É–∫–∞–∑–∞–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É '{group}'. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {attempts}.")

        await member.send("‚ùå –ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –¢—ã –æ—Å—Ç–∞–Ω–µ—à—å—Å—è –≤ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ'.")
        await self.log_action(guild, f"‚ùå {member.display_name} –Ω–µ –ø—Ä–æ—à—ë–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫.")

    async def assign_group_role_and_channels(
        self, guild: discord.Guild, member: discord.Member, first_name: str, last_name: str, group: str, unknown_role: discord.Role
    ):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –≥—Ä—É–ø–ø—ã."""
        group_role = await self.get_or_create_role(guild, group)
        await member.add_roles(group_role)
        if unknown_role in member.roles:
            await member.remove_roles(unknown_role)

        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è
        category = discord.utils.get(guild.categories, name=group)
        if not category:
            category = await guild.create_category(
                name=group,
                overwrites={
                    guild.default_role: PermissionOverwrite(view_channel=False),
                    group_role: PermissionOverwrite(view_channel=True),
                },
            )
            await self.log_action(guild, f"üìÇ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è '{group}'.")

        # –û–±—â–∏–π –∫–∞–Ω–∞–ª –≥—Ä—É–ø–ø—ã
        group_channel_name = group.lower()
        group_channel = discord.utils.get(category.text_channels, name=group_channel_name)
        if not group_channel:
            group_channel = await category.create_text_channel(
                group_channel_name,
                overwrites={
                    guild.default_role: PermissionOverwrite(view_channel=False),
                    group_role: PermissionOverwrite(view_channel=True, send_messages=True),
                },
            )
            await self.log_action(guild, f"üí¨ –°–æ–∑–¥–∞–Ω –≥—Ä—É–ø–ø–æ–≤–æ–π –∫–∞–Ω–∞–ª #{group_channel_name}.")

        # –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª
        personal_channel_name = f"{last_name.lower()}-{first_name.lower()}"
        personal_channel = discord.utils.get(category.text_channels, name=personal_channel_name)
        if not personal_channel:
            overwrites = {
                guild.default_role: PermissionOverwrite(view_channel=False),
                group_role: PermissionOverwrite(view_channel=False),
                member: PermissionOverwrite(view_channel=True, send_messages=True, read_message_history=True),
            }
            personal_channel = await category.create_text_channel(
                personal_channel_name,
                overwrites=overwrites,
                topic=str(member.id)
            )
            await self.log_action(guild, f"üë§ –°–æ–∑–¥–∞–Ω –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª {personal_channel.mention} –¥–ª—è {member.display_name}.")
        else:
            # ‚ö†Ô∏è –ù–æ–≤—ã–π –ª–æ–≥ –∏ –≤—ã–∑–æ–≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
            await self.log_action(guild, f"‚ö†Ô∏è –õ–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª {personal_channel.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è {member.display_name}.")
            feedback = await self.get_or_create_feedback_channel(guild)
            view = ChannelConflictView(member, category, personal_channel)
            await feedback.send(
                f'‚ö†Ô∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª "{member.display_name}" –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n'
                f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                view=view
            )

    # -------------------------------------------------------------------------
    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    # -------------------------------------------------------------------------

    async def get_or_create_role(self, guild, role_name):
        role = discord.utils.get(guild.roles, name=role_name)
        if not role:
            role = await guild.create_role(name=role_name)
            await self.log_action(guild, f"üé≠ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å '{role_name}'.")
        return role

    async def setup_unknown_role_and_channel(self, guild):
        """–°–æ–∑–¥–∞—ë—Ç —Ä–æ–ª—å –∏ –∫–∞–Ω–∞–ª '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ'."""
        unknown_role = await self.get_or_create_role(guild, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ")
        overwrites = {
            guild.default_role: PermissionOverwrite(view_channel=False),
            unknown_role: PermissionOverwrite(view_channel=True, send_messages=True),
        }
        channel = discord.utils.get(guild.text_channels, name="–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ")
        if not channel:
            await guild.create_text_channel("–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ", overwrites=overwrites)
            await self.log_action(guild, "üì© –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª #–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ.")
        else:
            await channel.edit(overwrites=overwrites)
            await self.log_action(guild, "üì© –ö–∞–Ω–∞–ª #–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")

    async def get_or_create_feedback_channel(self, guild):
        """–°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –±–æ—Ç–∞."""
        channel_name = f"{self.bot.user.name.lower()}-feedback"
        channel = discord.utils.get(guild.text_channels, name=channel_name)
        if not channel:
            overwrites = {
                guild.default_role: PermissionOverwrite(view_channel=False),
                guild.me.top_role: PermissionOverwrite(view_channel=True, send_messages=True),
            }
            channel = await guild.create_text_channel(channel_name, overwrites=overwrites)
            print(f"–°–æ–∑–¥–∞–Ω feedback –∫–∞–Ω–∞–ª {channel_name}")
        return channel

    async def log_action(self, guild: discord.Guild, message: str):
        """–ü–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ feedback-–∫–∞–Ω–∞–ª."""
        fb = self.feedback_channels.get(guild.id)
        if not fb:
            fb = await self.get_or_create_feedback_channel(guild)
            self.feedback_channels[guild.id] = fb
        await fb.send(message)
