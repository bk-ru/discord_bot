from discord.ext import commands
import discord
from discord import ui, ButtonStyle, Interaction
from database.models import User, LabWork
from tortoise.exceptions import DoesNotExist
from typing import Union
import traceback
import re

async def _safe_respond(interaction, content, *, ephemeral=True):
    try:
        if interaction.response.is_done():
            await interaction.followup.send(content, ephemeral=ephemeral)
        else:
            await interaction.response.send_message(content, ephemeral=ephemeral)
    except Exception as e:
        cog = interaction.client.get_cog("LabsCog")
        if cog and hasattr(cog, "_log_feedback"):
            await cog._log_feedback(interaction.guild, f"‚ùå safe_respond: {e}")

class LabsCog(commands.Cog):
    """–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–¥–∞—á–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç."""

    def __init__(self, bot):
        self.bot = bot
        
    async def _get_or_create_feedback_channel(self, guild: discord.Guild) -> discord.TextChannel | None:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–Ω–∞–ª {bot}-feedback, —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞."""
        try:
            bot_member = guild.me
            bot_name = bot_member.display_name if bot_member else "Bot"

            # –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–¥ –∏–º—è –±–æ—Ç–∞
            category = discord.utils.get(guild.categories, name=bot_name)
            if not category:
                category = await guild.create_category(bot_name, reason="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–¥ —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –±–æ—Ç–∞")
            
            # –°–∞–º –∫–∞–Ω–∞–ª
            ch_name = f"{bot_name.lower()}-feedback"
            channel = discord.utils.get(guild.text_channels, name=ch_name)
            if channel and channel.category != category:
                # –ü–µ—Ä–µ–Ω–µ—Å—ë–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                await channel.edit(category=category)
                return channel

            if not channel:
                overwrites = {
                    guild.default_role: discord.PermissionOverwrite(view_channel=False),
                    guild.me: discord.PermissionOverwrite(view_channel=True, send_messages=True, read_message_history=True),
                }
                channel = await guild.create_text_channel(
                    ch_name, category=category, overwrites=overwrites, reason="–õ–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π –±–æ—Ç–∞"
                )
                try:
                    await channel.send(f"üìù –ö–∞–Ω–∞–ª –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è {bot_name} —Å–æ–∑–¥–∞–Ω.")
                except Exception:
                    pass
            return channel
        except Exception as e:
            print(f"[feedback] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å/–ø–æ–ª—É—á–∏—Ç—å feedback-–∫–∞–Ω–∞–ª: {e}")
            return None

    async def _log_feedback(self, guild: discord.Guild, text: str) -> None:
        """–ü–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ feedback-–∫–∞–Ω–∞–ª (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –æ—à–∏–±–æ–∫)."""
        try:
            ch = await self._get_or_create_feedback_channel(guild)
            if ch:
                await ch.send(text)
            else:
                print(f"[feedback:FALLBACK] {text}")
        except Exception as e:
            print(f"[feedback] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e} | {text}")

    # -------------------- –ö–æ–º–∞–Ω–¥—ã —Å—Ç—É–¥–µ–Ω—Ç–∞ --------------------

    @commands.command(name="submit")
    async def submit_lab(self, ctx, lab_number: int):
        """
        –°–¥–∞—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É.
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !submit <–Ω–æ–º–µ—Ä> (—Å –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º –≤ —ç—Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏
        –ò–õ–ò –≤ –æ–¥–Ω–æ–º –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ).
        """
        try:
            # 1) –í–ª–æ–∂–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∞–≤—Ç–æ—Ä–∞
            attachment = ctx.message.attachments[0] if ctx.message.attachments else None
            if not attachment:
                await ctx.send("üìé –ü—Ä–∏–∫—Ä–µ–ø–∏ —Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –∫–æ–º–∞–Ω–¥–æ–π `!submit <–Ω–æ–º–µ—Ä>`.")
                await self._log_feedback(ctx.guild, f"‚ö†Ô∏è {ctx.author.mention} –ø–æ–ø—ã—Ç–∞–ª—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é ‚Ññ{lab_number} –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏—è.")
                return

            file_url = attachment.url

            # 2) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
            user = await self._ensure_user(ctx.author)

            # 2.1) –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥—Ä—É–ø–ø—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞
            detected_group = None
            category = getattr(ctx.channel, "category", None)
            if category and category.name:
                detected_group = category.name.strip()

                # –ò—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–±–æ—Ç–∞/–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ)
                bot_member = ctx.guild.me
                bot_names = {
                    self.bot.user.name.lower() if self.bot.user else "",
                    (bot_member.display_name.lower() if bot_member and bot_member.display_name else "")
                }
                if detected_group and detected_group.lower() not in {"", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ"} and detected_group.lower() not in bot_names:
                    if user.group != detected_group:
                        await User.filter(id=user.id).update(group=detected_group)
                        user.group = detected_group
                        await self._log_feedback(
                            ctx.guild,
                            f"üîÑ {ctx.author.mention} —Ç–µ–ø–µ—Ä—å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≥—Ä—É–ø–ø–µ **{detected_group}** (–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞)."
                        )
                else:
                    detected_group = None

            # 3) –°–æ–∑–¥–∞—ë–º/–æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –ë–ï–ó —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è partial-–º–æ–¥–µ–ª–∏
            lab, created = await LabWork.get_or_create(
                user=user,
                lab_number=lab_number,
                defaults={"file_url": file_url, "status": "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"}
            )
            if created:
                # –∑–∞–ø–∏—Å—å —É–∂–µ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
                pass
            else:
                # –æ–±–Ω–æ–≤–ª—è–µ–º —á–µ—Ä–µ–∑ query (–æ–±—Ö–æ–¥–∏—Ç partial), –∑–∞—Ç–µ–º –≥—Ä—É–∑–∏–º –ø–æ–ª–Ω—É—é –∑–∞–ø–∏—Å—å
                await LabWork.filter(user=user, lab_number=lab_number).update(
                    file_url=file_url,
                    status="–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
                )
                lab = await LabWork.get(user=user, lab_number=lab_number)  # —Ç–µ–ø–µ—Ä—å –ù–ï partial

            # 4) –ü—É–±–ª–∏–∫–∞—Ü–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –µ—Å—Ç—å –≥—Ä—É–ø–ø–∞)
            if user.group and user.group.lower() != "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ":
                try:
                    await self._post_to_teacher_channel(ctx, lab, user.group, file_url, requester=ctx.author)
                except Exception as e:
                    await ctx.send(f"‚ö†Ô∏è –†–∞–±–æ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: `{e}`")
                    await self._log_feedback(
                        ctx.guild,
                        f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã ‚Ññ{lab_number} –≤ –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {e}"
                    )
            else:
                await self._log_feedback(
                    ctx.guild,
                    f"‚ÑπÔ∏è {ctx.author.mention} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é ‚Ññ{lab_number}, –Ω–æ –≥—Ä—É–ø–ø–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ ‚Äî –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø—É—â–µ–Ω."
                )

            # 5) –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            msg = "‚úÖ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞." if created else "üîÅ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞."
            await ctx.send(f"{msg}\nüìò –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number}\nüìé {file_url}")

        except Exception as e:
            print(f"[!submit] –û—à–∏–±–∫–∞: {e}")
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ `!submit`: `{e}`")

    
    @submit_lab.error
    async def submit_lab_error(self, ctx, error):
        from discord.ext.commands import MissingRequiredArgument, BadArgument, CommandInvokeError

        if isinstance(error, MissingRequiredArgument):
            await ctx.send("‚ùó –£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä —Ä–∞–±–æ—Ç—ã: `!submit <–Ω–æ–º–µ—Ä>` –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ —Ñ–∞–π–ª.")
        elif isinstance(error, BadArgument):
            await ctx.send("‚ùó –ù–æ–º–µ—Ä —Ä–∞–±–æ—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º: `!submit 1`.")
        elif isinstance(error, CommandInvokeError):
            # –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—É
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: `{error.original}`")
        else:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: `{error}`")



    @commands.command(name="status")
    async def status_lab(self, ctx, lab_number: int):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã."""
        user = await User.get_or_none(discord_id=ctx.author.id)
        if not user:
            await ctx.send("‚ùå –í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            return

        lab = await LabWork.get_or_none(user=user, lab_number=lab_number)
        if not lab:
            await ctx.send(f"‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{lab_number}.")
            return

        embed = discord.Embed(
            title=f"–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab.lab_number}",
            description=f"**–°—Ç–∞—Ç—É—Å:** {lab.status.capitalize()}",
            color=discord.Color.green() if lab.status == "–∑–∞—á—Ç–µ–Ω–æ" else discord.Color.orange()
        )
        if lab.feedback:
            embed.add_field(name="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", value=lab.feedback, inline=False)
        if lab.file_url:
            embed.add_field(name="–§–∞–π–ª", value=lab.file_url, inline=False)

        await ctx.send(embed=embed)

    @commands.command(name="labs")
    async def list_labs(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç."""
        user = await self._ensure_user(ctx.author)

        labs = await LabWork.filter(user=user).order_by("lab_number")
        if not labs:
            await ctx.send("üìÇ –£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç.")
            return

        embed = discord.Embed(title=f"–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã {user.first_name} {user.last_name}")
        for lab in labs:
            embed.add_field(
                name=f"‚Ññ{lab.lab_number} ‚Äî {lab.status.capitalize()}",
                value=f"[–§–∞–π–ª]({lab.file_url})" if lab.file_url else "‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞",
                inline=False
            )
        await ctx.send(embed=embed)

    # -------------------- –ö–æ–º–∞–Ω–¥—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è --------------------

    @commands.has_permissions(administrator=True)
    @commands.command(name="review")
    async def review_lab(self, ctx, student: discord.Member, lab_number: int, *, comment: str):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É."""
        user = await User.get_or_none(discord_id=student.id)
        if not user:
            await ctx.send("‚ùå –≠—Ç–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
            return

        lab = await LabWork.get_or_none(user=user, lab_number=lab_number)
        if not lab:
            await ctx.send("‚ö†Ô∏è –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç —ç—Ç–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π.")
            return

        lab.status = "–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–µ"
        lab.feedback = comment
        await lab.save()
        await ctx.send(f"üõ†Ô∏è –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.mention} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É.")
        await student.send(f"üõ†Ô∏è –¢–≤–æ—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É.\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")

    @commands.has_permissions(administrator=True)
    @commands.command(name="accept")
    async def accept_lab(self, ctx, student: discord.Member, lab_number: int):
        """–ó–∞—á–µ—Å—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É."""
        user = await User.get_or_none(discord_id=student.id)
        if not user:
            await ctx.send("‚ùå –≠—Ç–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
            return

        lab = await LabWork.get_or_none(user=user, lab_number=lab_number)
        if not lab:
            await ctx.send("‚ö†Ô∏è –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç —ç—Ç–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π.")
            return

        lab.status = "–∑–∞—á—Ç–µ–Ω–æ"
        await lab.save()
        await ctx.send(f"‚úÖ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.mention} –∑–∞—á—Ç–µ–Ω–∞.")
        await student.send(f"üéâ –¢–≤–æ—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} –∑–∞—á—Ç–µ–Ω–∞! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!")

    @commands.has_permissions(administrator=True)
    @commands.command(name="deletelab")
    async def delete_lab(self, ctx, student: discord.Member, lab_number: int):
        """–£–¥–∞–ª–∏—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤–º–µ—Å—Ç–µ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."""
        user = await User.get_or_none(discord_id=student.id)
        if not user:
            await ctx.send("‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return

        lab = await LabWork.get_or_none(user=user, lab_number=lab_number)
        if not lab:
            await ctx.send(f"‚ö†Ô∏è –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{lab_number}.")
            return

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–æ –æ—Å—Ç–∞–ª–æ—Å—å
        if lab.teacher_channel_id and lab.teacher_message_id:
            channel = ctx.guild.get_channel(lab.teacher_channel_id)
            if isinstance(channel, discord.TextChannel):
                try:
                    msg = await channel.fetch_message(lab.teacher_message_id)
                    await msg.delete()
                except Exception:
                    pass

        await self._log_feedback(
            ctx.guild,
            f"üóëÔ∏è {ctx.author.mention} —É–¥–∞–ª–∏–ª —Ä–∞–±–æ—Ç—É ‚Ññ{lab_number} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {student.mention}."
        )

        await lab.delete()
        await ctx.send(f"‚úÖ –†–∞–±–æ—Ç–∞ ‚Ññ{lab_number} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {student.mention} —É–¥–∞–ª–µ–Ω–∞.")
        try:
            await student.send(
                f"üóëÔ∏è –¢–≤–æ—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author.mention}."
            )
        except Exception:
            pass
        
    @commands.has_permissions(administrator=True)
    @commands.command(name="labfile")
    async def lab_file(self, ctx, student: discord.Member, lab_number: int):
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–∞."""
        user = await User.get_or_none(discord_id=student.id)
        if not user:
            await ctx.send("‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return

        lab = await LabWork.get_or_none(user=user, lab_number=lab_number)
        if not lab:
            await ctx.send(f"‚ö†Ô∏è –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{lab_number}.")
            return

        if not lab.file_url:
            await ctx.send("‚ö†Ô∏è –î–ª—è —ç—Ç–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª.")
            return

        await ctx.send(f"üìé –§–∞–π–ª –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{lab_number} —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.mention}: {lab.file_url}")

    @commands.has_permissions(administrator=True)
    @commands.command(name="resubmitlab")
    async def resubmit_lab(self, ctx, student: discord.Member, lab_number: int):
        """–ó–∞–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É."""
        if not ctx.message.attachments:
            await ctx.send("üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –∫–æ–º–∞–Ω–¥–æ–π.")
            return

        attachment = ctx.message.attachments[0]
        file_url = attachment.url

        user = await User.get_or_none(discord_id=student.id)
        if not user:
            await ctx.send("‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return

        lab = await LabWork.get_or_none(user=user, lab_number=lab_number)
        if not lab:
            await ctx.send(f"‚ö†Ô∏è –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{lab_number}.")
            return

        await LabWork.filter(id=lab.id).update(
            file_url=file_url,
            status="–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
        )
        lab = await LabWork.get(id=lab.id)

        await self._log_feedback(
            ctx.guild,
            f"üîÑ {ctx.author.mention} –∑–∞–º–µ–Ω–∏–ª —Ñ–∞–π–ª –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{lab_number} –¥–ª—è {student.mention}."
        )

        if user.group and user.group.lower() != "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ":
            try:
                await self._post_to_teacher_channel(ctx, lab, user.group, file_url, requester=ctx.author)
            except Exception as e:
                await ctx.send(f"‚ö†Ô∏è –§–∞–π–ª –æ–±–Ω–æ–≤–ª—ë–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: `{e}`")

        await ctx.send(f"‚úÖ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} –¥–ª—è {student.mention} –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
        try:
            await student.send(
                f"üîÑ –í–∞—à–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab_number} –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {ctx.author.mention}. –ù–æ–≤—ã–π —Ñ–∞–π–ª: {file_url}"
            )
        except Exception:
            pass

    async def _ensure_user(self, member: Union[discord.Member, discord.User]) -> User:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î –∏–ª–∏ —Å–æ–∑–¥–∞—ë—Ç –∑–∞–ø–∏—Å—å –Ω–∞ –ª–µ—Ç—É (–¥–ª—è —Å—Ç–∞—Ä—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)."""
        user = await User.get_or_none(discord_id=member.id)
        if user:
            return user

        # –ü—ã—Ç–∞–µ–º—Å—è —É–≥–∞–¥–∞—Ç—å –∏–º—è/—Ñ–∞–º–∏–ª–∏—é –∏–∑ display_name; –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å—Ç–∞–≤–∏–º –∑–∞–≥–ª—É—à–∫–∏
        display = str(getattr(member, "display_name", member.name)).strip()
        first, last = (display.split() + ["-", "-"])[:2]
        return await User.create(
            discord_id=member.id,
            first_name=first,
            last_name=last,
            group="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ",
        )
        
    async def get_or_create_teacher_channel(
        self,
        guild: discord.Guild,
        group_name: str,
        requester: discord.Member | None = None,
    ):
        """–°–æ–∑–¥–∞—ë—Ç/–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –≥—Ä—É–ø–ø—ã –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ —à–∞–≥–∏ –≤ feedback."""
        if not group_name:
            await self._log_feedback(guild, "‚ö†Ô∏è –ù–µ –∑–∞–¥–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")
            return None
        group_name = group_name.strip()

        await self._log_feedback(guild, f"üîé –ü–æ–∏—Å–∫/—Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –≥—Ä—É–ø–ø—ã **{group_name}**...")

        # 1) –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≥—Ä—É–ø–ø—ã
        category = discord.utils.get(guild.categories, name=group_name)
        if not category:
            try:
                category = await guild.create_category(
                    name=group_name,
                    reason="–°–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã"
                )
                await self._log_feedback(guild, f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≥—Ä—É–ø–ø—ã **{group_name}**.")
            except Exception as e:
                await self._log_feedback(guild, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é **{group_name}**: `{e}`")
                return None
        else:
            await self._log_feedback(guild, f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è **{group_name}** –Ω–∞–π–¥–µ–Ω–∞ (id={category.id}).")

        # 2) –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        teacher_role = (
            discord.utils.get(guild.roles, name="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")
            or discord.utils.get(guild.roles, name="–ü—Ä–µ–ø–æ–¥—ã")
            or discord.utils.get(guild.roles, name="Teacher")
        )
        admin_roles = [r for r in guild.roles if r.permissions.administrator]

        def _is_staff(m: discord.Member) -> bool:
            p = m.guild_permissions
            return p.administrator or p.manage_guild or p.manage_channels

        overwrites: dict[discord.abc.Snowflake, discord.PermissionOverwrite] = {
            guild.default_role: discord.PermissionOverwrite(view_channel=False),
            guild.me: discord.PermissionOverwrite(
                view_channel=True, send_messages=True, read_message_history=True
            ),
        }
        if teacher_role:
            overwrites[teacher_role] = discord.PermissionOverwrite(
                view_channel=True, send_messages=True, read_message_history=True
            )
        for r in admin_roles:
            overwrites[r] = discord.PermissionOverwrite(
                view_channel=True, send_messages=True, read_message_history=True
            )
        if requester and _is_staff(requester):
            overwrites[requester] = discord.PermissionOverwrite(
                view_channel=True, send_messages=True, read_message_history=True
            )

        # 3) –ö–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        teacher_channel_name = f"–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å-{group_name.lower()}"
        teacher_channel = discord.utils.get(category.text_channels, name=teacher_channel_name)

        if not teacher_channel:
            try:
                teacher_channel = await category.create_text_channel(
                    name=teacher_channel_name,
                    overwrites=overwrites,
                    topic=f"üìò –ö–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –≥—Ä—É–ø–ø—ã {group_name} (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö)"
                )
                await self._log_feedback(
                    guild,
                    f"‚úÖ –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {teacher_channel.mention} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ **{group_name}**."
                )
                try:
                    await teacher_channel.send(
                        f"üë®‚Äçüè´ –ö–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è –≥—Ä—É–ø–ø—ã **{group_name}** —Å–æ–∑–¥–∞–Ω. "
                        f"–î–æ—Å—Ç—É–ø: —Ä–æ–ª—å {'`'+teacher_role.name+'`' if teacher_role else '‚Äî'}; "
                        f"–∞–¥–º–∏–Ω-—Ä–æ–ª–µ–π: {len(admin_roles)}; "
                        f"{'–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω' if requester and _is_staff(requester) else '–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω'}."
                    )
                except Exception:
                    pass
            except Exception as e:
                await self._log_feedback(guild, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: `{e}`")
                return None
        else:
            try:
                await teacher_channel.edit(overwrites=overwrites)
                await self._log_feedback(
                    guild,
                    f"‚ÑπÔ∏è –ö–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {teacher_channel.mention} —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª ‚Äî –ø—Ä–∞–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã."
                )
            except Exception as e:
                await self._log_feedback(guild, f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ {teacher_channel.mention}: `{e}`")

        # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç, –∫—Ç–æ —Ç–æ—á–Ω–æ –≤–∏–¥–∏—Ç –∫–∞–Ω–∞–ª
        visible = []
        if teacher_role:
            visible.append(f"—Ä–æ–ª—å `{teacher_role.name}`")
        if admin_roles:
            visible.append(f"{len(admin_roles)} –∞–¥–º–∏–Ω-—Ä–æ–ª–µ–π")
        if requester and _is_staff(requester):
            visible.append(f"–∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä {requester.mention}")
        await self._log_feedback(
            guild,
            "üëÅ –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: " + (", ".join(visible) if visible else "—Ç–æ–ª—å–∫–æ –±–æ—Ç/–∞–¥–º–∏–Ω—ã –ø–æ –ø—Ä–∞–≤—É Administrator")
        )

        return teacher_channel



    
    async def _post_to_teacher_channel(
        self,
        ctx,
        lab: LabWork,
        group_name: str,
        file_url: str,
        requester: discord.Member | None = None
    ) -> bool:
        """–ü–æ—Å—Ç–∏—Ç/–æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ –≤ –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–æ–º –≤ feedback."""
        group_name = (group_name or "").strip()
        if not group_name or group_name.lower() == "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ":
            await self._log_feedback(ctx.guild, f"‚ö†Ô∏è –ì—Ä—É–ø–ø–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞/–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –¥–ª—è {ctx.author.mention} ‚Äî –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞.")
            return False

        await self._log_feedback(ctx.guild, f"üß™ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã ‚Ññ{lab.lab_number} –≤ –∫–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≥—Ä—É–ø–ø—ã **{group_name}**...")

        teacher_channel = await self.get_or_create_teacher_channel(ctx.guild, group_name, requester=requester)
        if not teacher_channel:
            await self._log_feedback(ctx.guild, f"‚ùå –ö–∞–Ω–∞–ª –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–ª—è **{group_name}** –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω/–Ω–µ —Å–æ–∑–¥–∞–Ω.")
            return False

        # –µ—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –ø—Ä–∏—à–ª–∞ partial-–º–æ–¥–µ–ª—å ‚Äî –¥–æ–≥—Ä—É–∂–∞–µ–º
        if getattr(lab, "id", None) is None:
            lab = await LabWork.get(user_id=lab.user_id, lab_number=lab.lab_number)

        # —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
        if getattr(lab, "teacher_message_id", None):
            try:
                old_msg = await teacher_channel.fetch_message(lab.teacher_message_id)
                await old_msg.delete()
                await self._log_feedback(ctx.guild, f"üßπ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ ‚Ññ{lab.lab_number} (msg_id={lab.teacher_message_id}).")
            except Exception as e:
                await self._log_feedback(ctx.guild, f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (msg_id={lab.teacher_message_id}): `{e}`")

        # –≤—Ä–µ–º—è
        try:
            when = (lab.updated_at or lab.submitted_at).strftime("%d.%m.%Y %H:%M")
        except Exception:
            when = "—Ç–æ–ª—å–∫–æ —á—Ç–æ"

        embed = discord.Embed(
            title=f"üß™ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{lab.lab_number}",
            description=(f"üë§ –°—Ç—É–¥–µ–Ω—Ç: {ctx.author.mention}\n"
                        f"üìé [–§–∞–π–ª]({file_url})\n"
                        f"üïì –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {when}"),
            color=discord.Color.blurple()
        )
        embed.set_footer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ")

        try:
            msg = await teacher_channel.send(embed=embed, view=LabReviewView(lab))
            lab.teacher_message_id = msg.id
            lab.teacher_channel_id = teacher_channel.id
            await lab.save(update_fields=["teacher_message_id", "teacher_channel_id"])
            await self._log_feedback(ctx.guild, f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ ‚Ññ{lab.lab_number} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ {teacher_channel.mention} (msg_id={msg.id}).")
            return True
        except Exception as e:
            await self._log_feedback(ctx.guild, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ {teacher_channel.mention}: `{e}`")
            return False        

class LabReviewView(ui.View):
    """–ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º."""

    def __init__(self, labwork):
        super().__init__(timeout=None)
        self.labwork = labwork  # –æ–±—ä–µ–∫—Ç ORM LabWork

    async def _get_student(self, guild: discord.Guild, interaction: Interaction):
        user_obj = getattr(self.labwork, "user", None)
        if not user_obj:
            try:
                await self.labwork.fetch_related("user")
                user_obj = self.labwork.user
            except Exception:
                user_obj = await User.get_or_none(id=getattr(self.labwork, "user_id", None))

        discord_member = None
        discord_id = getattr(user_obj, "discord_id", None) if user_obj else None

        if discord_id:
            discord_member = guild.get_member(discord_id) or await guild.fetch_member(discord_id)

        # –†–µ–∑–µ—Ä–≤: –¥–æ—Å—Ç–∞—ë–º –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º discord_id –≤ –ë–î
        if discord_member is None:
            parsed = await self._extract_student_from_teacher_message(interaction)
            if parsed:
                discord_member = parsed
                if user_obj and (not getattr(user_obj, "discord_id", None) or user_obj.discord_id != parsed.id):
                    try:
                        await User.filter(id=user_obj.id).update(discord_id=parsed.id)  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤ –ë–î
                        user_obj.discord_id = parsed.id
                    except Exception:
                        pass

        return discord_member, user_obj
    
    async def _extract_student_from_teacher_message(self, interaction: Interaction) -> discord.Member | None:
        msg_id = getattr(self.labwork, "teacher_message_id", None)
        channel_id = getattr(self.labwork, "teacher_channel_id", None)
        if not msg_id:
            return None

        channel: discord.TextChannel | None = None
        if channel_id:
            channel = interaction.guild.get_channel(channel_id)
        if channel is None or not isinstance(channel, discord.TextChannel):
            channel = interaction.channel if isinstance(interaction.channel, discord.TextChannel) else None
        if channel is None:
            return None

        try:
            msg = await channel.fetch_message(msg_id)
        except Exception:
            return None

        # 1) –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä—è–º—ã–µ mentions ‚Äî –±–µ—Ä—ë–º –ø–µ—Ä–≤–æ–≥–æ
        if msg.mentions:
            m = msg.mentions[0]
            return interaction.guild.get_member(m.id) or await interaction.guild.fetch_member(m.id)

        # 2) –∏–Ω–∞—á–µ –ø—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å –∏–∑ embed.description "üë§ –°—Ç—É–¥–µ–Ω—Ç: <@123...>"
        if msg.embeds:
            desc = (msg.embeds[0].description or "")
            m = re.search(r"<@!?(\d+)>", desc)
            if m:
                uid = int(m.group(1))
                try:
                    return interaction.guild.get_member(uid) or await interaction.guild.fetch_member(uid)
                except Exception:
                    return None
        return None

    async def _process_result(
        self,
        interaction: Interaction,
        *,
        status: str,
        teacher_reply: str,
        feedback: str | None = None,
    ) -> None:
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å, —É–≤–µ–¥–æ–º–ª—è–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞, –æ—á–∏—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."""
        self.labwork.status = status
        if feedback is not None:
            self.labwork.feedback = feedback
        try:
            await self.labwork.save(update_fields=["status", "feedback"])
        except Exception as e:
            cog = interaction.client.get_cog("LabsCog")
            if cog and hasattr(cog, "_log_feedback"):
                await cog._log_feedback(interaction.guild, f"‚ùå save(status/feedback) failed: {e}")

        await self._notify_student_and_channel(interaction, status, feedback)
        await _safe_respond(interaction, teacher_reply, ephemeral=True)
        await self._delete_teacher_message(interaction)

        student_for_log, user_obj = await self._get_student(interaction.guild, interaction)
        student_label = (
            student_for_log.mention
            if student_for_log
            else (f"<@{getattr(user_obj, 'discord_id', None)}>" if user_obj and getattr(user_obj, "discord_id", None) else f"db_user_id={getattr(self.labwork, 'user_id', None)}")
        )
        
        cog = interaction.client.get_cog("LabsCog")
        if cog and hasattr(cog, "_log_feedback"):
            try:
                await cog._log_feedback(
                    interaction.guild,
                    (
                        f"üõ†Ô∏è –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{self.labwork.lab_number} –¥–ª—è {student_label} "
                        f"–æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ {status.upper()} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º {interaction.user.mention}. "
                        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {feedback or '‚Äî'}."
                    )
                )
            except Exception:
                pass

    async def _notify_student_and_channel(
        self,
        interaction: Interaction,
        status: str,
        feedback: str | None,
    ) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç—É –≤ –ª–∏—á–∫—É –∏ –µ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª."""
        student, user_obj = await self._get_student(interaction.guild, interaction)
        discord_id = getattr(user_obj, "discord_id", None) if user_obj else None

        base_message = (
            f"üß™ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ{self.labwork.lab_number} "
            f"–ø–æ–º–µ—á–µ–Ω–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º {interaction.user.mention} –∫–∞–∫ **{status.upper()}**."
        )
        if feedback:
            base_message += f"\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {feedback}"

        log_bits: list[str] = []

        if not user_obj:
            log_bits.append("ORM-–∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞; —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
            cog = interaction.client.get_cog("LabsCog")
            if cog and hasattr(cog, "_log_feedback"):
                try:
                    await cog._log_feedback(interaction.guild, " | ".join(log_bits))
                except Exception:
                    pass
            return

        student_label = (
            student.mention if student else (f"<@{discord_id}>" if discord_id else "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
        )
        log_bits.append(
            f"–°—Ç–∞—Ç—É—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π ‚Ññ{self.labwork.lab_number}: {status}. –°—Ç—É–¥–µ–Ω—Ç {student_label} (discord_id={discord_id})."
        )

        if student:
            try:
                await student.send(base_message)
                log_bits.append("DM: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            except Exception as dm_err:
                log_bits.append(f"DM: –Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ ({dm_err}).")
        else:
            log_bits.append("DM: –ø—Ä–æ–ø—É—â–µ–Ω–æ (—É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ).")

        # –∏—â–µ–º –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ topic –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∞–º–∏–ª–∏—è-–∏–º—è
        target_id = student.id if student else discord_id
        def _is_personal(ch: discord.TextChannel) -> bool:
            topic_value = (ch.topic or "").strip()
            if target_id and topic_value == str(target_id):
                return True
            if topic_value and topic_value == str(self.labwork.user_id):
                return True
            first = (getattr(user_obj, "first_name", "") or "").strip().lower()
            last = (getattr(user_obj, "last_name", "") or "").strip().lower()
            if not first or not last:
                return False
            expected_name = f"{last.replace(' ', '-')}-{first.replace(' ', '-')}"
            alt_name = f"{first.replace(' ', '-')}-{last.replace(' ', '-')}"
            if ch.name in (expected_name, alt_name):
                return True
            if ch.name.startswith(f"{expected_name}-") or ch.name.startswith(f"{alt_name}-"):
                return True
            return False

        personal_channel = discord.utils.find(
            lambda ch: isinstance(ch, discord.TextChannel) and _is_personal(ch),
            interaction.guild.text_channels,
        )
        if personal_channel:
            mention_prefix = (
                student.mention if student else (f"<@{target_id}>" if target_id else user_obj.first_name)
            )
            channel_message = f"{mention_prefix} {base_message}"
            try:
                await personal_channel.send(channel_message)
                log_bits.append(f"–ö–∞–Ω–∞–ª {personal_channel.mention} (id={personal_channel.id}): –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            except Exception as ch_err:
                log_bits.append(f"–ö–∞–Ω–∞–ª {personal_channel.mention} (id={getattr(personal_channel, 'id', '?')}): –æ—à–∏–±–∫–∞ ({ch_err}).")
        else:
            expected_name = (
                f"{(getattr(user_obj, 'last_name', '') or '').lower()}-"
                f"{(getattr(user_obj, 'first_name', '') or '').lower()}"
            )
            log_bits.append(
                f"–õ–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª: –Ω–µ –Ω–∞–π–¥–µ–Ω (target_id={target_id}, –æ–∂–∏–¥–∞–µ–º—ã–µ –∏–º–µ–Ω–∞ '{expected_name}' / "
                f"'{(getattr(user_obj, 'first_name', '') or '').lower()}-"
                f"{(getattr(user_obj, 'last_name', '') or '').lower()}')."
            )

        teacher_channel_id = getattr(self.labwork, "teacher_channel_id", None)
        teacher_message_id = getattr(self.labwork, "teacher_message_id", None)
        log_bits.append(f"ID –∫–∞–Ω–∞–ª–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {teacher_channel_id}, msg_id: {teacher_message_id}.")
        comment_text = feedback if feedback else "‚Äî"
        log_bits.append(f"Feedback: —Å—Ç–∞—Ç—É—Å='{status}', –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π='{comment_text}'.")

        cog = interaction.client.get_cog("LabsCog")
        if cog and hasattr(cog, "_log_feedback"):
            try:
                await cog._log_feedback(interaction.guild, " | ".join(log_bits))
            except Exception:
                pass

    async def _delete_teacher_message(self, interaction: Interaction) -> None:
        """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –∫–∞–Ω–∞–ª–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –æ—á–∏—â–∞–µ—Ç —Å—Å—ã–ª–∫–∏."""
        msg_id = getattr(self.labwork, "teacher_message_id", None)
        channel_id = getattr(self.labwork, "teacher_channel_id", None)
        if not msg_id:
            return

        channel: discord.TextChannel | None = None
        if channel_id:
            channel = interaction.guild.get_channel(channel_id)
        if channel is None or not isinstance(channel, discord.TextChannel):
            channel = interaction.channel if isinstance(interaction.channel, discord.TextChannel) else None

        if channel:
            try:
                msg = await channel.fetch_message(msg_id)
                await msg.delete()
            except Exception:
                pass

        self.labwork.teacher_message_id = None
        self.labwork.teacher_channel_id = None
        try:
            await self.labwork.save(update_fields=["teacher_message_id", "teacher_channel_id"])
        except Exception as e:
            cog = interaction.client.get_cog("LabsCog")
            if cog and hasattr(cog, "_log_feedback"):
                await cog._log_feedback(interaction.guild, f"‚ö†Ô∏è cleanup pointers failed: {e}")

    @ui.button(label="–ó–∞—á—Ç–µ–Ω–æ ‚úÖ", style=ButtonStyle.success)
    async def accept(self, interaction: Interaction, button: ui.Button):
        await self._process_result(
            interaction,
            status="–∑–∞—á—Ç–µ–Ω–æ",
            teacher_reply=f"‚úÖ –†–∞–±–æ—Ç–∞ ‚Ññ{self.labwork.lab_number} –∑–∞—á—Ç–µ–Ω–∞.",
        )

    @ui.button(label="–ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É üõ†", style=ButtonStyle.danger)
    async def review(self, interaction: Interaction, button: ui.Button):
        modal = FeedbackModal(self.labwork, parent_view=self)
        await interaction.response.send_modal(modal)


class FeedbackModal(ui.Modal, title="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ä–∞–±–æ—Ç–µ"):
    feedback = ui.TextInput(label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", style=discord.TextStyle.paragraph, required=True)

    def __init__(self, labwork, parent_view: LabReviewView):
        super().__init__()
        self.labwork = labwork
        self.parent_view = parent_view

    async def on_submit(self, interaction: Interaction):
        try:
            # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è ‚Äî –º–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å defer:
            # await interaction.response.defer(ephemeral=True)

            await self.parent_view._process_result(
                interaction,
                status="–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–µ",
                teacher_reply="üì¨ –†–∞–±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç—É –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É.",
                feedback=self.feedback.value,
            )
        except Exception as e:
            tb = traceback.format_exc()
            cog = interaction.client.get_cog("LabsCog")
            if cog and hasattr(cog, "_log_feedback"):
                await cog._log_feedback(
                    interaction.guild,
                    f"‚ùå Modal submit failed: {e}\n```py\n{tb}\n```"
                )
            # –ß—Ç–æ–±—ã Discord –Ω–µ –ø–æ–∫–∞–∑–∞–ª –∫—Ä–∞—Å–Ω—É—é –æ—à–∏–±–∫—É ‚Äî –¥–∞—ë–º —è–≤–Ω—ã–π –æ—Ç–≤–µ—Ç
            await _safe_respond(
                interaction,
                "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ feedback.",
                ephemeral=True
            )
            
async def setup(bot):
    await bot.add_cog(LabsCog(bot))
